{"ast":null,"code":"import _objectSpread from \"/Users/jordanblack/Desktop/EcommerceHelio/helio/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { CartActionTypes } from './cart.types';\nimport { addItemToCart, removeItemFromCart } from './cart.utils';\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      return _objectSpread({}, state, {\n        hidden: !state.hidden\n      });\n\n    case CartActionTypes.ADD_ITEM:\n      return _objectSpread({}, state, {\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      });\n\n    case CartActionTypes.CLEAR_ITEM_FROM_CART:\n      return _objectSpread({}, state, {\n        cartItems: state.cartItems.filter(cartItem => cartItem.id !== action.payload.id)\n      });\n\n    case CartActionTypes.REMOVE_ITEM:\n      return _objectSpread({}, state, {\n        cartItems: removeItemFromCart(state.cartItems, action.payload)\n      });\n\n    case CartActionTypes.CLEAR_CART:\n      return _objectSpread({}, state, {\n        ca\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Users/jordanblack/Desktop/EcommerceHelio/helio/src/redux/cart/cart.reducer.js"],"names":["CartActionTypes","addItemToCart","removeItemFromCart","INITIAL_STATE","hidden","cartItems","cartReducer","state","action","type","TOGGLE_CART_HIDDEN","ADD_ITEM","payload","CLEAR_ITEM_FROM_CART","filter","cartItem","id","REMOVE_ITEM","CLEAR_CART","ca"],"mappings":";AAAC,SAAQA,eAAR,QAA8B,cAA9B;AACA,SAASC,aAAT,EAAwBC,kBAAxB,QAAkD,cAAlD;AAEA,MAAMC,aAAa,GAAG;AACnBC,EAAAA,MAAM,EAAE,IADW;AAEnBC,EAAAA,SAAS,EAAE;AAFQ,CAAtB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAAmC;AACpD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKT,eAAe,CAACU,kBAArB;AACI,+BACOH,KADP;AAEGH,QAAAA,MAAM,EAAE,CAACG,KAAK,CAACH;AAFlB;;AAIJ,SAAKJ,eAAe,CAACW,QAArB;AACI,+BACOJ,KADP;AAEIF,QAAAA,SAAS,EAAEJ,aAAa,CAACM,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB;AAF5B;;AAIJ,SAAKZ,eAAe,CAACa,oBAArB;AACI,+BACON,KADP;AAEIF,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBS,MAAhB,CACPC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBR,MAAM,CAACI,OAAP,CAAeI,EADpC;AAFf;;AAMJ,SAAKhB,eAAe,CAACiB,WAArB;AACI,+BACOV,KADP;AAEIF,QAAAA,SAAS,EAAEH,kBAAkB,CAAEK,KAAK,CAACF,SAAR,EAAmBG,MAAM,CAACI,OAA1B;AAFjC;;AAIJ,SAAKZ,eAAe,CAACkB,UAArB;AACI,+BACOX,KADP;AAEIY,QAAAA;AAFJ;;AAIJ;AACI,aAAOZ,KAAP;AA7BR;AA+BF,CAhCD;;AAkCA,eAAeD,WAAf","sourcesContent":[" import {CartActionTypes} from './cart.types'\n import { addItemToCart, removeItemFromCart } from './cart.utils'\n \n const INITIAL_STATE = {\n    hidden: true,\n    cartItems: []\n };\n\n const cartReducer = (state = INITIAL_STATE, action) => {\n    switch(action.type){\n        case CartActionTypes.TOGGLE_CART_HIDDEN:\n            return{\n                ...state,\n               hidden: !state.hidden\n            }\n        case CartActionTypes.ADD_ITEM:\n            return{\n                ...state,\n                cartItems: addItemToCart(state.cartItems, action.payload)\n            }\n        case CartActionTypes.CLEAR_ITEM_FROM_CART:\n            return {\n                ...state,\n                cartItems: state.cartItems.filter(\n                    cartItem => cartItem.id !== action.payload.id\n                )\n            }\n        case CartActionTypes.REMOVE_ITEM:\n            return {\n                ...state,\n                cartItems: removeItemFromCart (state.cartItems, action.payload)\n            }\n        case CartActionTypes.CLEAR_CART:\n            return {\n                ...state,\n                ca\n            }\n        default :\n            return state;\n    }\n }\n\n export default cartReducer"]},"metadata":{},"sourceType":"module"}