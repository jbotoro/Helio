{"ast":null,"code":"var _jsxFileName = \"/Users/jordanblack/Desktop/EcommerceHelio/helio/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\nclass Shop extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const updateCollections = this.props.updateCollections;\n    const collectionRef = firestore.collection('collections');\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      console.log(snapshot);\n      const collectMap = convertCollectionsSnapshotToMap(snapshot);\n      console.log(collectMap);\n      updateCollections(collectMap);\n    });\n  }\n\n  render() {\n    const match = this.props.match;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(Shop);","map":{"version":3,"sources":["/Users/jordanblack/Desktop/EcommerceHelio/helio/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","CollectionsOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","updateCollections","WithSpinner","Shop","Component","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","console","log","collectMap","render","match","path","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA0D,+BAA1D;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAOC,WAAP,MAAwB,sDAAxB;;AAEA,MAAMC,IAAN,SAAmBT,KAAK,CAACU,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAE/BC,uBAF+B,GAEL,IAFK;AAAA;;AAK/BC,EAAAA,iBAAiB,GAAG;AAAA,UACRL,iBADQ,GACc,KAAKM,KADnB,CACRN,iBADQ;AAEhB,UAAMO,aAAa,GAAIT,SAAS,CAACU,UAAV,CAAqB,aAArB,CAAvB;AAED,SAAKJ,uBAAL,GAA+BG,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACrEC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,YAAMG,UAAU,GAAGd,+BAA+B,CAACW,QAAD,CAAlD;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYC,UAAZ;AACAb,MAAAA,iBAAiB,CAACa,UAAD,CAAjB;AACH,KAL6B,CAA/B;AAMF;;AAEDC,EAAAA,MAAM,GAAG;AAAA,UACGC,KADH,GACa,KAAKT,KADlB,CACGS,KADH;AAEL,WAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEA,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAEpB,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEmB,KAAK,CAACC,IAAK,gBAA3B;AAA4C,MAAA,SAAS,EAAEnB,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAFJ;AAQH;;AA3B8B;;AA8BnC,MAAMoB,kBAAkB,GAAGC,QAAQ,KAAK;AACpClB,EAAAA,iBAAiB,EAAEmB,cAAc,IACjCD,QAAQ,CAAClB,iBAAiB,CAACmB,cAAD,CAAlB;AAF4B,CAAL,CAAnC;;AAOA,eAAexB,OAAO,CAAC,IAAD,EAAOsB,kBAAP,CAAP,CAAkCf,IAAlC,CAAf","sourcesContent":["import React from 'react';\nimport {Route} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component'\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils'\nimport { updateCollections } from '../../redux/shop/shop.actions'\nimport WithSpinner from '../../components/with-spinner/with-spinner.component'\n\nclass Shop extends React.Component {\n\n    unsubscribeFromSnapshot = null;\n   \n\n    componentDidMount() {\n        const { updateCollections } = this.props;\n        const collectionRef =  firestore.collection('collections');\n\n       this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n            console.log(snapshot)\n            const collectMap = convertCollectionsSnapshotToMap(snapshot)\n            console.log(collectMap)\n            updateCollections(collectMap)\n        })\n    }\n\n    render() {\n        const { match } = this.props;\n        return (\n\n            <div className='shop-page'>\n                <Route exact path={`${match.path}`} component={CollectionsOverview} />\n                <Route path={`${match.path}/:collectionId`} component={CollectionPage} />\n            </div>\n\n        )\n    }\n} \n\nconst mapDispatchToProps = dispatch => ({\n    updateCollections: collectionsMap => \n    dispatch(updateCollections(collectionsMap))\n\n})\n\n\nexport default connect(null, mapDispatchToProps)(Shop);"]},"metadata":{},"sourceType":"module"}