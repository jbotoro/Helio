{"ast":null,"code":"import _objectSpread from \"/Users/jordanblack/Desktop/EcommerceHelio/helio/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/jordanblack/Desktop/EcommerceHelio/helio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jordanblack/Desktop/EcommerceHelio/helio/src/components/sign-in/sign-in.component.jsx\";\nimport React, { useState } from \"react\";\nimport { connect } from 'react-redux';\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport { SignInContainer, SignInTitle, ButtonsBarContainer } from \"./sign-in.styles\";\n\nconst _useState = useState({\n  email: '',\n  password: ''\n}),\n      _useState2 = _slicedToArray(_useState, 2),\n      userCredentials = _useState2[0],\n      setCredentials = _useState2[1];\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const emailSignInStart = this.props.emailSignInStart;\n    const _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password;\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          value = _event$target.value,\n          name = _event$target.name;\n    setCredentials(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(SignInContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(SignInTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"I already have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    handleChange: handleChange,\n    value: this.state.email,\n    label: \"email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    value: this.state.password,\n    handleChange: handleChange,\n    label: \"password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(ButtonsBarContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \" Sign in \"), React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Sign in with Google\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/jordanblack/Desktop/EcommerceHelio/helio/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignInContainer","SignInTitle","ButtonsBarContainer","email","password","userCredentials","setCredentials","SignIn","handleSubmit","event","preventDefault","props","state","handleChange","target","value","name","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport {connect} from 'react-redux'\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\n\nimport {googleSignInStart, emailSignInStart} from '../../redux/user/user.actions'\n\nimport {\n  SignInContainer,\n  SignInTitle,\n  ButtonsBarContainer\n} from \"./sign-in.styles\";\n\nconst [userCredentials, setCredentials] = useState({email:'', password:''})\nconst SignIn = ({emailSignInStart, googleSignInStart}) => { \n\n  \n  \n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const {emailSignInStart} = this.props;\n    const { email, password } = this.state;\n\n    emailSignInStart(email, password);\n   \n  };\n\n  const handleChange = event => {\n    const { value, name } = event.target;\n\n    setCredentials({...userCredentials, [name]: value });\n  };\n\n  \n    \n\n    return (\n      <SignInContainer>\n        <SignInTitle>I already have an account</SignInTitle>\n        <span>Sign in with your email and password</span>\n\n        <form onSubmit={handleSubmit}>\n          <FormInput\n            name=\"email\"\n            type=\"email\"\n            handleChange={handleChange}\n            value={this.state.email}\n            label=\"email\"\n            required\n          />\n          <FormInput\n            name=\"password\"\n            type=\"password\"\n            value={this.state.password}\n            handleChange={handleChange}\n            label=\"password\"\n            required\n          />\n          <ButtonsBarContainer>\n            <CustomButton type=\"submit\"> Sign in </CustomButton>\n            <CustomButton \n              type='button'\n              onClick={googleSignInStart} \n              isGoogleSignIn\n              >\n              Sign in with Google\n            </CustomButton>\n          </ButtonsBarContainer>\n        </form>\n      </SignInContainer>\n    );\n  }\n\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email,password) => dispatch(emailSignInStart({email, password}))\n})\n\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}