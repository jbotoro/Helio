{"ast":null,"code":"var _jsxFileName = \"/Users/jordanblack/Desktop/EcommerceHelio/helio/src/pages/collection/collection.component.jsx\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport CollectionItem from \"../../components/collection-item/collection-item.component\";\nimport { firestore } from '../../firebase/firebase.utils';\nimport { selectCollection } from \"../../redux/shop/shop.selectors\";\nimport { CollectionPageContainer, CollectionTitle, CollectionItemsContainer } from \"./collection.styles\";\n\nconst CollectionPage = ({\n  collection\n}) => {\n  useEffect(() => {\n    const unsubscribeFromCollections = firestore.collection('collections').onSnapShot(snapshot => console.log(snapshot));\n    return () => {\n      unsubscribeFromCollections();\n    };\n  }, []);\n  const title = collection.title,\n        items = collection.items;\n  return React.createElement(CollectionPageContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(CollectionTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, title), React.createElement(CollectionItemsContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, items.map(item => React.createElement(CollectionItem, {\n    key: item.id,\n    item: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }))));\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  collection: selectCollection(ownProps.match.params.collectionId)(state)\n});\n\nexport default connect(mapStateToProps)(CollectionPage);","map":{"version":3,"sources":["/Users/jordanblack/Desktop/EcommerceHelio/helio/src/pages/collection/collection.component.jsx"],"names":["React","useEffect","connect","CollectionItem","firestore","selectCollection","CollectionPageContainer","CollectionTitle","CollectionItemsContainer","CollectionPage","collection","unsubscribeFromCollections","onSnapShot","snapshot","console","log","title","items","map","item","id","mapStateToProps","state","ownProps","match","params","collectionId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,cAAP,MAA2B,4DAA3B;AACA,SAAQC,SAAR,QAAwB,+BAAxB;AACA,SAASC,gBAAT,QAAiC,iCAAjC;AAEA,SACEC,uBADF,EAEEC,eAFF,EAGEC,wBAHF,QAIO,qBAJP;;AAMA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AAEzCT,EAAAA,SAAS,CAAE,MAAM;AAEf,UAAMU,0BAA0B,GAAGP,SAAS,CAC3CM,UADkC,CACvB,aADuB,EAElCE,UAFkC,CAEtBC,QAAQ,IAAIC,OAAO,CAACC,GAAR,CAAYF,QAAZ,CAFU,CAAnC;AAGA,WAAO,MAAM;AACXF,MAAAA,0BAA0B;AAC3B,KAFD;AAGD,GARQ,EAQP,EARO,CAAT;AAFyC,QAajCK,KAbiC,GAahBN,UAbgB,CAajCM,KAbiC;AAAA,QAa1BC,KAb0B,GAahBP,UAbgB,CAa1BO,KAb0B;AAczC,SACE,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBD,KAAlB,CADF,EAEE,oBAAC,wBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,KAAK,CAACC,GAAN,CAAUC,IAAI,IACb,oBAAC,cAAD;AAAgB,IAAA,GAAG,EAAEA,IAAI,CAACC,EAA1B;AAA8B,IAAA,IAAI,EAAED,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAFF,CADF;AAUD,CAxBD;;AA0BA,MAAME,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,MAAsB;AAC1Cb,EAAAA,UAAU,EAAEL,gBAAgB,CAACkB,QAAQ,CAACC,KAAT,CAAeC,MAAf,CAAsBC,YAAvB,CAAhB,CAAqDJ,KAArD;AAD8B,CAAtB,CAAxB;;AAIA,eAAepB,OAAO,CAACmB,eAAD,CAAP,CAAyBZ,cAAzB,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport CollectionItem from \"../../components/collection-item/collection-item.component\";\nimport {firestore} from '../../firebase/firebase.utils'\nimport { selectCollection } from \"../../redux/shop/shop.selectors\";\n\nimport {\n  CollectionPageContainer,\n  CollectionTitle,\n  CollectionItemsContainer\n} from \"./collection.styles\";\n\nconst CollectionPage = ({ collection }) => {\n\n  useEffect( () => {\n    \n    const unsubscribeFromCollections = firestore\n    .collection('collections')\n    .onSnapShot( snapshot => console.log(snapshot))\n    return () => {\n      unsubscribeFromCollections();\n    }\n  },[])\n\n\n  const { title, items } = collection;\n  return (\n    <CollectionPageContainer>\n      <CollectionTitle>{title}</CollectionTitle>\n      <CollectionItemsContainer>\n        {items.map(item => (\n          <CollectionItem key={item.id} item={item} />\n        ))}\n      </CollectionItemsContainer>\n    </CollectionPageContainer>\n  );\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    collection: selectCollection(ownProps.match.params.collectionId)(state)\n})\n\nexport default connect(mapStateToProps)(CollectionPage);"]},"metadata":{},"sourceType":"module"}