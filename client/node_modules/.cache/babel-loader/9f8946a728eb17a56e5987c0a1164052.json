{"ast":null,"code":"var _jsxFileName = \"/Users/jordanblack/Desktop/EcommerceHelio/helio/src/components/cart-dropdown/cart-dropdown.component.jsx\";\nimport React from 'react';\nimport CustomButton from '../custom-button/custom-button.component';\nimport CartItem from '../cart-item/cart-item.component';\nimport './cart-dropdown.styles.scss';\nimport { connect } from 'react-redux';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter } from 'react-router-dom';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\n\nconst CartDropDown = ({\n  cartItems,\n  history,\n  dispatch\n}) => React.createElement(\"div\", {\n  className: \"cart-dropdown\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"cart-items\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, cartItems.length ? cartItems.map(cartItem => React.createElement(CartItem, {\n  key: cartItem.id,\n  item: cartItem,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n})) : React.createElement(\"span\", {\n  className: \"empty-message\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, \" Your cart is empty\")), React.createElement(CustomButton, {\n  onClick: (() => history.push('/checkout'), dispatch(toggleCartHidden)),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, \" GO TO CHECKOUT\"));\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\nexport default withRouter(connect(mapStateToProps)(CartDropDown));","map":{"version":3,"sources":["/Users/jordanblack/Desktop/EcommerceHelio/helio/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","CustomButton","CartItem","connect","selectCartItems","createStructuredSelector","withRouter","toggleCartHidden","CartDropDown","cartItems","history","dispatch","length","map","cartItem","id","push","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,OAAO,6BAAP;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,eAAT,QAA+B,iCAA/B;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,gBAAR,QAA+B,+BAA/B;;AAGA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA,OAAZ;AAAqBC,EAAAA;AAArB,CAAD,KACjB;AAAK,EAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAK,EAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKF,SAAS,CAACG,MAAV,GACGH,SAAS,CAACI,GAAV,CAAeC,QAAQ,IACvB,oBAAC,QAAD;AAAW,EAAA,GAAG,EAAEA,QAAQ,CAACC,EAAzB;AAA6B,EAAA,IAAI,EAAGD,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADA,CADH,GAMG;AAAM,EAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAPR,CADJ,EAYI,oBAAC,YAAD;AAAc,EAAA,OAAO,GAAK,MAAMJ,OAAO,CAACM,IAAR,CAAa,WAAb,CAAN,EAAiCL,QAAQ,CAACJ,gBAAD,CAA9C,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAZJ,CADJ;;AAiBA,MAAMU,eAAe,GAAGZ,wBAAwB,CAAC;AAC7CI,EAAAA,SAAS,EAAEL;AADkC,CAAD,CAAhD;AAIA,eAAeE,UAAU,CAACH,OAAO,CAACc,eAAD,CAAP,CAAyBT,YAAzB,CAAD,CAAzB","sourcesContent":["import React from 'react';\nimport CustomButton from '../custom-button/custom-button.component'\nimport CartItem from '../cart-item/cart-item.component'\nimport './cart-dropdown.styles.scss'\nimport {connect} from 'react-redux'\nimport { selectCartItems} from '../../redux/cart/cart.selectors'\nimport {createStructuredSelector} from 'reselect'\nimport {withRouter} from 'react-router-dom'\nimport {toggleCartHidden} from '../../redux/cart/cart.actions'\n\n\nconst CartDropDown = ({cartItems, history, dispatch}) => (\n    <div className='cart-dropdown'>\n        <div className='cart-items'>\n            {cartItems.length ?\n                cartItems.map( cartItem => (\n                <CartItem  key={cartItem.id} item ={cartItem}/>\n            ))\n            : \n            (\n                <span className='empty-message'> Your cart is empty</span>\n            )}\n            \n        </div>\n        <CustomButton onClick = { () => history.push('/checkout'), dispatch(toggleCartHidden)}> GO TO CHECKOUT</CustomButton>\n    </div>\n)\n\nconst mapStateToProps = createStructuredSelector({\n    cartItems: selectCartItems\n})\n\nexport default withRouter(connect(mapStateToProps)(CartDropDown));"]},"metadata":{},"sourceType":"module"}