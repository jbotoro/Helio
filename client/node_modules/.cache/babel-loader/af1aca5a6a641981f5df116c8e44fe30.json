{"ast":null,"code":"var _jsxFileName = \"/Users/jordanblack/Desktop/EcommerceHelio/helio/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass Shop extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const match = this.props.match;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(Shop);","map":{"version":3,"sources":["/Users/jordanblack/Desktop/EcommerceHelio/helio/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","CollectionsOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","updateCollections","WithSpinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","Shop","Component","unsubscribeFromSnapshot","componentDidMount","render","match","props","path","loading","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA0D,+BAA1D;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAGA,MAAMC,8BAA8B,GAAGD,WAAW,CAACL,mBAAD,CAAlD;AACA,MAAMO,yBAAyB,GAAGF,WAAW,CAACJ,cAAD,CAA7C;;AAEA,MAAMO,IAAN,SAAmBX,KAAK,CAACY,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAG/BC,uBAH+B,GAGL,IAHK;AAAA;;AAO/BC,EAAAA,iBAAiB,GAAG,CAEnB;;AAEDC,EAAAA,MAAM,GAAG;AAAA,UACGC,KADH,GACa,KAAKC,KADlB,CACGD,KADH;AAEL,WAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEA,KAAK,CAACE,IAAK,EAAjC;AAAoC,MAAA,MAAM,EAAGD,KAAD,IAAW,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEE;AAA3C,SAAwDF,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,gBAA3B;AAA4C,MAAA,MAAM,EAAGD,KAAD,IAAW,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEE;AAAtC,SAAmDF,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAFJ;AAQH;;AArB8B;;AAwBnC,MAAMG,kBAAkB,GAAGC,QAAQ,KAAK;AACpCd,EAAAA,iBAAiB,EAAEe,cAAc,IACjCD,QAAQ,CAACd,iBAAiB,CAACe,cAAD,CAAlB;AAF4B,CAAL,CAAnC;;AAOA,eAAepB,OAAO,CAAC,IAAD,EAAOkB,kBAAP,CAAP,CAAkCT,IAAlC,CAAf","sourcesContent":["import React from 'react';\nimport {Route} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component'\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils'\nimport { updateCollections } from '../../redux/shop/shop.actions'\nimport WithSpinner from '../../components/with-spinner/with-spinner.component'\n\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview)\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage)\n\nclass Shop extends React.Component {\n   \n\n    unsubscribeFromSnapshot = null;\n   \n\n\n    componentDidMount() {\n  \n    }\n\n    render() {\n        const { match } = this.props;\n        return (\n\n            <div className='shop-page'>\n                <Route exact path={`${match.path}`} render={(props) => <CollectionsOverviewWithSpinner isLoading={loading} {...props} />} />\n                <Route path={`${match.path}/:collectionId`} render={(props) => <CollectionPageWithSpinner isLoading={loading} {...props}/>} />\n            </div>\n\n        )\n    }\n} \n\nconst mapDispatchToProps = dispatch => ({\n    updateCollections: collectionsMap => \n    dispatch(updateCollections(collectionsMap))\n\n})\n\n\nexport default connect(null, mapDispatchToProps)(Shop);"]},"metadata":{},"sourceType":"module"}