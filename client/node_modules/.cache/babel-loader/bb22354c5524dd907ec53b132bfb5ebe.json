{"ast":null,"code":"import _objectSpread from \"/Users/jordanblack/Desktop/EcommerceHelio/helio/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { googleProvider, auth, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport { signInFailure, signInSuccess, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from './user.actions';\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const user = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const _ref2 = yield auth.createUserWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexp;\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(isUserAuthenticated), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["/Users/jordanblack/Desktop/EcommerceHelio/helio/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","googleProvider","auth","createUserProfileDocument","getCurrentUser","signInFailure","signInSuccess","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","onCheckUserSession","CHECK_USER_SESSION","onEmailSignInStart","EMAIL_SIGN_IN_START","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signOut","onSignOutStart","SIGN_OUT_START","signUp","displayName","createUserWithEmailAndPassword","additionalData","exp","onSignUpSuccess","SIGN_UP_SUCCESS","signInAfterSignUp","onSignUpStart","SIGN_UP_START","userSagas"],"mappings":"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","sourcesContent":["import {takeLatest, put, all, call} from 'redux-saga/effects'\n\nimport UserActionTypes from './user.types'\nimport {\n    googleProvider, \n    auth, \n    createUserProfileDocument, \n    getCurrentUser\n} from '../../firebase/firebase.utils'\nimport {\n    signInFailure,\n    signInSuccess,\n    signOutSuccess, \n    signOutFailure, \n    signUpSuccess, \n    signUpFailure\n} from './user.actions'\n\n\nexport function* getSnapshotFromUserAuth(userAuth) {\n     try {\n        \n        const userRef = yield call(createUserProfileDocument, userAuth);\n        const userSnapshot = yield userRef.get();\n        yield put(signInSuccess({\n            id: userSnapshot.id,\n            ...userSnapshot.data()\n        }))\n    } catch (error) {\n        yield put(signInFailure(error))\n    }\n}\n\nexport function* signInWithGoogle() {\n    try {\n        const user = yield auth.signInWithPopup(googleProvider);\n        yield getSnapshotFromUserAuth(user);\n    } catch (error) {\n        yield put(signInFailure(error))\n    }\n}\n\nexport function* signInWithEmail({ payload: {email, password}}) {\n    try{\n        const {user} = yield auth.signInWithEmailAndPassword(email,password);\n        yield getSnapshotFromUserAuth(user)\n    } catch(error) {\n        yield put(signInFailure(error))\n    }\n}\n\nexport function* isUserAuthenticated() {\n    try{\n        const userAuth = yield getCurrentUser();\n        if(!userAuth) return;\n        yield getSnapshotFromUserAuth(userAuth)\n    } catch(error) {\n        yield put(signInFailure(error))\n    }\n}\n\nexport function* onCheckUserSession() {\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\n}\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\n}\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\nexport function* signOut() {\n    try{\n        yield auth.signOut();\n        yield put(signOutSuccess())\n    } catch (error) {\n        yield put(signOutFailure(error))\n    }\n}\n\nexport function* onSignOutStart() {\n    yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut)\n}\n\nexport function* signUp({payload: {email, password, displayName}}) {\n\n    try {\n      const { user } = yield auth.createUserWithEmailAndPassword(\n        email,\n        password\n      );\n\n      yield put(signUpSuccess({ user, additionalData: {displayName} }))\n    } catch(error) {\n        yield put(signUpFailure(error))\n    }\n}\n\nexp\n\nexport function* onSignUpSuccess() {\n    yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp)\n}\n\nexport function* onSignUpStart() {\n    yield takeLatest(UserActionTypes.SIGN_UP_START, signUp)\n}\n\nexport function* userSagas() {\n    yield all([\n        call(onGoogleSignInStart), \n        call(onEmailSignInStart), \n        call(isUserAuthenticated),\n        call(onSignOutStart),\n    ])\n}"]},"metadata":{},"sourceType":"module"}