{"ast":null,"code":"import _objectSpread from \"/Users/jordanblack/Desktop/EcommerceHelio/helio/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { googleProvider, auth, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { signInFailure, signInSuccess } from './user.actions';\ne;\nexport function* signInWithGoogle() {\n  try {\n    const user = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref.user;\n\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/Users/jordanblack/Desktop/EcommerceHelio/helio/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","googleProvider","auth","createUserProfileDocument","signInFailure","signInSuccess","e","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","id","data","error","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","onGoogleSignInStart","GOOGLE_SIGN_IN_START","userSagas"],"mappings":";AAAA,SAAQA,UAAR,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,QAAyC,oBAAzC;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAAQC,cAAR,EAAwBC,IAAxB,EAA8BC,yBAA9B,QAA8D,+BAA9D;AACA,SACIC,aADJ,EAEIC,aAFJ,QAGO,gBAHP;AAMAC,CAAC;AAED,OAAO,UAAUC,gBAAV,GAA6B;AAChC,MAAI;AACA,UAAMC,IAAI,GAAG,MAAMN,IAAI,CAACO,eAAL,CAAqBR,cAArB,CAAnB;AACA,UAAMS,OAAO,GAAG,MAAMX,IAAI,CAACI,yBAAD,EAA4BK,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMf,GAAG,CAACQ,aAAa;AACnBQ,MAAAA,EAAE,EAAEF,YAAY,CAACE;AADE,OAEhBF,YAAY,CAACG,IAAb,EAFgB,EAAd,CAAT;AAIH,GARD,CAQE,OAAOC,KAAP,EAAc;AACZ,UAAMlB,GAAG,CAACO,aAAa,CAACW,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR;AAAX,CAA1B,EAAyD;AAC5D,MAAG;AAAA,iBACgB,MAAMjB,IAAI,CAACkB,0BAAL,CAAgCF,KAAhC,EAAsCC,QAAtC,CADtB;AAAA,UACQX,IADR,QACQA,IADR;;AAEC,UAAME,OAAO,GAAG,MAAMX,IAAI,CAACI,yBAAD,EAA2BK,IAA3B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AAEA,UAAMf,GAAG,CACLQ,aAAa;AACTQ,MAAAA,EAAE,EAAEF,YAAY,CAACE;AADR,OAENF,YAAY,CAACG,IAAb,EAFM,EADR,CAAT;AAMH,GAXD,CAWE,OAAMC,KAAN,EAAa;AACX,UAAMlB,GAAG,CAACO,aAAa,CAACW,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUM,kBAAV,GAA+B;AAClC,QAAMzB,UAAU,CAACI,eAAe,CAACsB,mBAAjB,EAAsCN,eAAtC,CAAhB;AACH;AAED,OAAO,UAAUO,mBAAV,GAAgC;AACnC,QAAM3B,UAAU,CAACI,eAAe,CAACwB,oBAAjB,EAAuCjB,gBAAvC,CAAhB;AACH;AAED,OAAO,UAAUkB,SAAV,GAAsB;AACzB,QAAM3B,GAAG,CAAC,CAACC,IAAI,CAACwB,mBAAD,CAAL,EAA4BxB,IAAI,CAACsB,kBAAD,CAAhC,CAAD,CAAT;AACH","sourcesContent":["import {takeLatest, put, all, call} from 'redux-saga/effects'\n\nimport UserActionTypes from './user.types'\nimport {googleProvider, auth, createUserProfileDocument} from '../../firebase/firebase.utils'\nimport {\n    signInFailure,\n    signInSuccess\n} from './user.actions'\n\n\ne\n\nexport function* signInWithGoogle() {\n    try {\n        const user = yield auth.signInWithPopup(googleProvider);\n        const userRef = yield call(createUserProfileDocument, user);\n        const userSnapshot = yield userRef.get();\n        yield put(signInSuccess({\n            id: userSnapshot.id,\n            ...userSnapshot.data()\n        }))\n    } catch (error) {\n        yield put(signInFailure(error))\n    }\n}\n\nexport function* signInWithEmail({ payload: {email, password}}) {\n    try{\n        const {user} = yield auth.signInWithEmailAndPassword(email,password);\n        const userRef = yield call(createUserProfileDocument,user);\n        const userSnapshot = yield userRef.get();\n\n        yield put(\n            signInSuccess({ \n                id: userSnapshot.id, \n                ...userSnapshot.data()\n            })\n        )\n    } catch(error) {\n        yield put(signInFailure(error))\n    }\n}\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\n}\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\nexport function* userSagas() {\n    yield all([call(onGoogleSignInStart), call(onEmailSignInStart)])\n}"]},"metadata":{},"sourceType":"module"}