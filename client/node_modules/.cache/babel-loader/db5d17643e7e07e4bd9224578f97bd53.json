{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n      this.setState({\n        loading: false\n      });\n    });\n  };\n};\nexport const fetchCollectionsSuccess = error => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START,\n  payload: error\n});","map":{"version":3,"sources":["/Users/jordanblack/Desktop/EcommerceHelio/helio/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","collectionMap","setState","loading","fetchCollectionsSuccess","error","payload"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAAQC,SAAR,EAAmBC,+BAAnB,QAAyD,+BAAzD;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AACxCC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADkB,CAAP,CAA9B;AAGP,OAAO,MAAMC,0BAA0B,GAAG,MAAM;AAC5C,SAAOC,QAAQ,IAAI;AACf,UAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACJ,qBAAqB,EAAtB,CAAR;AAEAK,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACjC,YAAMC,aAAa,GAAGX,+BAA+B,CAACU,QAAD,CAArD;AACA,WAAKE,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACH,KAHD;AAIH,GARD;AASH,CAVM;AAWP,OAAO,MAAMC,uBAAuB,GAAIC,KAAD,KAAY;AAC/Cb,EAAAA,IAAI,EAAEJ,eAAe,CAACK,uBADyB;AAE/Ca,EAAAA,OAAO,EAAED;AAFsC,CAAZ,CAAhC","sourcesContent":["import ShopActionTypes from './shop.types'\nimport {firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils'\n\nexport const fetchCollectionsStart = () => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_START\n})\nexport const fetchCollectionsStartAsync = () => {\n    return dispatch => { \n        const collectionRef = firestore.collection('collections');\n        dispatch(fetchCollectionsStart());\n        \n        collectionRef.get().then(snapshot => {\n            const collectionMap = convertCollectionsSnapshotToMap(snapshot)\n            this.setState({ loading: false })\n        })\n    }\n}\nexport const fetchCollectionsSuccess = (error) => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_START,\n    payload: error\n})\n\n\n"]},"metadata":{},"sourceType":"module"}