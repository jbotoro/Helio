{"ast":null,"code":"var _jsxFileName = \"/Users/jordanblack/Desktop/EcommerceHelio/helio/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { createStructuredSelector } from 'reselect';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selectors';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass Shop extends React.Component {\n  componentDidMount() {\n    const fetchCollectionsStartAsync = this.props.fetchCollectionsStartAsync;\n    fet;\n  }\n\n  render() {\n    const _this$props = this.props,\n          match = _this$props.match,\n          isCollectionFetching = _this$props.isCollectionFetching;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Shop);","map":{"version":3,"sources":["/Users/jordanblack/Desktop/EcommerceHelio/helio/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","CollectionsOverview","CollectionPage","createStructuredSelector","fetchCollectionsStartAsync","selectIsCollectionFetching","WithSpinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","Shop","Component","componentDidMount","props","fet","render","match","isCollectionFetching","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SAAQC,0BAAR,QAAyC,iCAAzC;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAGA,MAAMC,8BAA8B,GAAGD,WAAW,CAACL,mBAAD,CAAlD;AACA,MAAMO,yBAAyB,GAAGF,WAAW,CAACJ,cAAD,CAA7C;;AAEA,MAAMO,IAAN,SAAmBX,KAAK,CAACY,SAAzB,CAAmC;AAO/BC,EAAAA,iBAAiB,GAAG;AAAA,UACTP,0BADS,GACqB,KAAKQ,KAD1B,CACTR,0BADS;AAEhBS,IAAAA,GAAG;AACN;;AAEDC,EAAAA,MAAM,GAAG;AAAA,wBACmC,KAAKF,KADxC;AAAA,UACGG,KADH,eACGA,KADH;AAAA,UACUC,oBADV,eACUA,oBADV;AAEL,WAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,EAAjC;AAAoC,MAAA,MAAM,EAAGL,KAAD,IAAW,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEI;AAA3C,SAAqEJ,KAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEG,KAAK,CAACE,IAAK,gBAA3B;AAA4C,MAAA,MAAM,EAAGL,KAAD,IAAW,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEI;AAAtC,SAAgEJ,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAFJ;AAQH;;AAtB8B;;AAwBnC,MAAMM,eAAe,GAAGf,wBAAwB,CAAC;AAC7Ca,EAAAA,oBAAoB,EAAEX;AADuB,CAAD,CAAhD;;AAIA,MAAMc,kBAAkB,GAAGC,QAAQ,KAAK;AACrChB,EAAAA,0BAA0B,EAAE,MAAMgB,QAAQ,CAAChB,0BAA0B,EAA3B;AADL,CAAL,CAAnC;;AAKA,eAAeJ,OAAO,CAACkB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CV,IAA7C,CAAf","sourcesContent":["import React from 'react';\nimport {Route} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component'\nimport CollectionPage from '../collection/collection.component';\nimport {createStructuredSelector} from 'reselect'\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions'\nimport {selectIsCollectionFetching} from '../../redux/shop/shop.selectors'\nimport WithSpinner from '../../components/with-spinner/with-spinner.component'\n\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview)\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage)\n\nclass Shop extends React.Component {\n   \n\n    \n   \n\n\n    componentDidMount() {\n        const {fetchCollectionsStartAsync} = this.props;\n        fet\n    }\n\n    render() {\n        const { match, isCollectionFetching } = this.props;\n        return (\n\n            <div className='shop-page'>\n                <Route exact path={`${match.path}`} render={(props) => <CollectionsOverviewWithSpinner isLoading={isCollectionFetching} {...props} />} />\n                <Route path={`${match.path}/:collectionId`} render={(props) => <CollectionPageWithSpinner isLoading={isCollectionFetching} {...props}/>} />\n            </div>\n\n        )\n    }\n} \nconst mapStateToProps = createStructuredSelector({\n    isCollectionFetching: selectIsCollectionFetching\n})\n\nconst mapDispatchToProps = dispatch => ({\n   fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Shop);"]},"metadata":{},"sourceType":"module"}